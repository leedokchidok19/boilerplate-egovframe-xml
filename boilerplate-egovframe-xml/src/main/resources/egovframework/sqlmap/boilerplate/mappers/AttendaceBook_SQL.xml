<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.leedokchidok.boilerplate.attendacebook.service.impl.AttendaceBookMapper">

	<resultMap id="attendaceBook"			type="io.leedokchidok.boilerplate.attendacebook.service.AttendaceBookVO">
		<result property="abIdx"			column="AB_IDX"/>
		<result property="abName"			column="AB_NAME"/>
		<result property="regDate"			column="REG_DATE"/>
		<result property="authId"			column="AUTH_ID"/>
		<result property="abTotCnt"			column="AB_TOT_CNT"/>
		<result property="abDate"			column="AB_DATE"/>
		<!--table 없는 컬럼-->
		<result property="abCntMonthOne"	column="AB_CNT_MONTH_ONE"/>
		<result property="abCntMonthTwo"	column="AB_CNT_MONTH_TWO"/>

	</resultMap>

	<!--	출석부 인원 신규 입력
		1. order="BEFORE"는 insert 전에 조회
		2. selectKey 구문의 위치는 INSERT 쿼리 위, 아래 상관 없이 위치
	-->
	<insert id="insertAttendaceBook" parameterType="AttendaceBookVO">

		<selectKey keyProperty="abIdx" resultType="int" order="BEFORE">
			SELECT IFNULL(MAX(AB_IDX), 0) + 1 FROM AB_MEMBER
		</selectKey>

		INSERT INTO AB_MEMBER
					(
						AB_IDX,
						AB_NAME,
						REG_DATE,
						AUTH_ID
					)
		VALUES
					(
						#{abIdx},
						TRIM( #{abName} ),
						DATE_FORMAT(NOW(), '%Y-%m-%d'),
						'A03'
					)

	</insert>

	<!--	출석부 인원 출석일 입력
		1. 입력한 날을 기준으로 출석일 추가
	-->
	<insert id="insertAttendaceDate" parameterType="AttendaceBookVO">

		INSERT INTO ATTENDACE
					(
						AB_IDX,
						AB_DATE
					)
		VALUES
					(
						#{abIdx},
						DATE_FORMAT(NOW(), '%Y-%m-%d')
					)

	</insert>

	<!--	출석부 인원 이름, 권한 수정	-->
	<update id="updateAttendaceBook">

			UPDATE AB_MEMBER
			SET
				<if test="abName != null and abName != ''">
					AB_NAME	=	#{abName}
				</if>
				<if test="searchKeyword != null">
					AB_TOT_CNT	=	AB_TOT_CNT +1
				</if>
			WHERE AB_IDX=#{abIdx}

	</update>

		<!--	출석부 인원 삭제	-->
	<delete id="deleteAttendaceBook">

			DELETE FROM AB_MEMBER
			WHERE AB_IDX	=	#{abIdx}

	</delete>

	<!--	출석부 인원 상세정보	-->
	<select id="selectAttendaceBook" resultMap="attendaceBook">

			SELECT
				AB_IDX,
				AB_NAME,
				REG_DATE,
				AUTH_ID,
				AB_TOT_CNT
			FROM AB_MEMBER
			WHERE AB_IDX	=	#{abIdx}

	</select>

	<!--	출석부 인원 목록
		설명 : 최근 1, 2개월과 총 출석일 조회
		정렬 조건 :	1) 모임장 > 운영자 > 일반 순서
					2) 총 1개월 출석일 가장 높은 순서
					3) 가장 최근에 출석한 사람 순서
					4) 그 이외의 조건은 가입 날짜가 빠른 사람 순서
		컬럼 :	1) AB_CNT_MONTH_ONE : 이번 달 출석 수
				2) AB_CNT_MONTH_TWO : 1개월 전 출석 수
				3) AB_DATE : 최근 출석일
	-->
	<select id="attendaceBookList" parameterType="searchVO" resultType="egovMap">

		SELECT
			ABM.AB_IDX,
			ABM.AB_NAME,
			ABM.REG_DATE,
			ABM.AUTH_ID,
			ABM.AB_TOT_CNT,
			(
				SELECT
					COUNT(*)
				FROM ATTENDACE
				WHERE ABM.AB_IDX = AB_IDX
				AND DATE_FORMAT(AB_DATE, '%Y-%m') = DATE_FORMAT(NOW(), '%Y-%m')
			) AS AB_CNT_MONTH_ONE,
			(
				SELECT
					COUNT(*)
				FROM ATTENDACE
				WHERE ABM.AB_IDX = AB_IDX
				AND DATE_FORMAT(AB_DATE, '%Y-%m') = DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 1 MONTH ), '%Y-%m')
			) AS AB_CNT_MONTH_TWO,
			IFNULL( (
				SELECT
					AB_DATE
				FROM ATTENDACE
				WHERE ABM.AB_IDX = AB_IDX
				ORDER BY AB_DATE DESC
				LIMIT 1
			), '2022-01-01') AS AB_DATE
		FROM AB_MEMBER AS ABM
		WHERE 1=1
		<if test="searchKeyword != null and searchKeyword != ''">
			AND AB_NAME = TRIM( #{searchKeyword} )
		</if>
		ORDER BY AUTH_ID, AB_CNT_MONTH_ONE DESC, AB_DATE DESC, REG_DATE

	</select>

	<!--	출석부 인원 페이징	-->
	<select id="selectAttendaceBookListTotCnt" parameterType="searchVO" resultType="int">

			SELECT
				COUNT(*) TOTCNT
			FROM AB_MEMBER
			WHERE 1=1
			<if test="searchKeyword != null and searchKeyword != ''">
				<choose>
					<when test="searchCondition == 0">
						AND AB_NAME LIKE '%' || #{searchKeyword} || '%'
					</when>
					<when test="searchCondition == 1">
						AND	AB_NAME LIKE '%' || #{searchKeyword} || '%'
					</when>
				</choose>
			</if>

	</select>

</mapper>